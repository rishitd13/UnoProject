#BlueJ class context
comment0.target=Card
comment0.text=\n\ <p>A\ Card\ in\ an\ Uno\ deck.\ Each\ Card\ knows\ its\ particular\ type,\ which\ is\n\ comprised\ of\ a\ 3-tuple\ (color,\ rank,\ number).\ Not\ all\ of\ these\ values\n\ are\ relevant\ for\ every\ particular\ type\ of\ card,\ however;\ for\ instance,\n\ wild\ cards\ have\ no\ color\ (getColor()\ will\ return\ Color.NONE)\ or\ number\n\ (getNumber()\ will\ return\ -1).</p>\n\ <p>A\ Card\ knows\ its\ forfeit\ cost\ (<i>i.e.</i>,\ how\ many\ points\ it\ counts\n\ against\ a\ loser\ who\ gets\ stuck\ with\ it)\ and\ how\ it\ should\ act\ during\n\ game\ play\ (whether\ it\ permits\ the\ player\ to\ change\ the\ color,\ what\n\ effect\ it\ has\ on\ the\ game\ state,\ etc.)</p>\n\ @since\ 1.0\n
comment1.params=color\ rank
comment1.target=Card(UnoPlayer.Color,\ UnoPlayer.Rank)
comment1.text=\n\ Constructor\ for\ non-number\ cards\ (skips,\ wilds,\ etc.)\n
comment10.params=
comment10.target=UnoPlayer.Color\ getColor()
comment10.text=\n\ Returns\ the\ color\ of\ this\ card,\ which\ is\ Color.NONE\ in\ the\ case\ of\n\ wild\ cards.\n
comment11.params=
comment11.target=UnoPlayer.Rank\ getRank()
comment11.text=\n\ Returns\ the\ rank\ of\ this\ card,\ which\ is\ Rank.NUMBER\ in\ the\ case\ of\n\ number\ cards\ (calling\ getNumber()\ will\ retrieve\ the\ specific\n\ number.)\n
comment12.params=
comment12.target=int\ getNumber()
comment12.text=\n\ Returns\ the\ number\ of\ this\ card,\ which\ is\ guaranteed\ to\ be\ -1\ for\n\ non-number\ cards\ (cards\ of\ non-Rank.NUMBER\ rank.)\n
comment2.params=color\ number
comment2.target=Card(UnoPlayer.Color,\ int)
comment2.text=\n\ Constructor\ for\ number\ cards.\n
comment3.params=color\ rank\ number
comment3.target=Card(UnoPlayer.Color,\ UnoPlayer.Rank,\ int)
comment3.text=\n\ Constructor\ to\ explicitly\ set\ entire\ card\ state.\n
comment4.params=
comment4.target=java.lang.String\ toString()
comment4.text=\n\ Render\ this\ Card\ object\ as\ a\ string.\ Whether\ the\ string\ comes\ out\n\ with\ ANSI\ color\ codes\ is\ controlled\ by\ the\ PRINT_IN_COLOR\ static\n\ class\ variable.\n
comment5.params=
comment5.target=int\ forfeitCost()
comment5.text=\n\ Returns\ the\ number\ of\ points\ this\ card\ will\ count\ against\ a\ player\n\ who\ holds\ it\ in\ his/her\ hand\ when\ another\ player\ goes\ out.\n
comment6.params=c\ calledColor
comment6.target=boolean\ canPlayOn(Card,\ UnoPlayer.Color)
comment6.text=\n\ Returns\ true\ only\ if\ this\ Card\ can\ legally\ be\ played\ on\ the\ up\ card\n\ passed\ as\ an\ argument.\ The\ second\ argument\ is\ relevant\ only\ if\ the\n\ up\ card\ is\ a\ wild.\n\ @param\ c\ An\ "up\ card"\ upon\ which\ the\ current\ object\ might\ (or\ might\n\ not)\ be\ a\ legal\ play.\n\ @param\ calledColor\ If\ the\ up\ card\ is\ a\ wild\ card,\ this\ parameter\n\ contains\ the\ color\ the\ player\ of\ that\ color\ called.\n
comment7.params=
comment7.target=boolean\ followedByCall()
comment7.text=\n\ Returns\ true\ only\ if\ playing\ this\ Card\ object\ would\ result\ in\ the\n\ player\ being\ asked\ for\ a\ color\ to\ call.\ (In\ the\ standard\ game,\ this\n\ is\ true\ only\ for\ wild\ cards.)\n
comment8.params=game
comment8.target=void\ performCardEffect(Game)
comment8.text=\n\ This\ method\ should\ be\ called\ immediately\ after\ a\ Card\ is\ played,\n\ and\ will\ trigger\ the\ effect\ peculiar\ to\ that\ card.\ For\ most\ cards,\n\ this\ merely\ advances\ play\ to\ the\ next\ player.\ Some\ special\ cards\n\ have\ other\ effects\ that\ modify\ the\ game\ state.\ Examples\ include\ a\n\ Skip,\ which\ will\ advance\ <i>twice</i>\ (past\ the\ next\ player),\ or\ a\n\ Draw\ Two,\ which\ will\ cause\ the\ next\ player\ to\ have\ to\ draw\ cards.\n\ @param\ game\ The\ Game\ being\ played,\ whose\ state\ may\ be\ modified\ by\n\ this\ card's\ effect.\n\ @throws\ EmptyDeckException\ Thrown\ only\ in\ very\ exceptional\ cases\n\ when\ a\ player\ must\ draw\ as\ a\ result\ of\ this\ card's\ effect,\ yet\ the\n\ draw\ cannot\ occur\ because\ of\ un-shufflable\ deck\ exhaustion.\n
comment9.params=game
comment9.target=void\ nextPlayerDraw(Game)
numComments=13
